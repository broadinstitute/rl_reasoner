# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.one_of_edge_binding_kg_id import OneOfEdgeBindingKgId  # noqa: F401,E501
from swagger_server import util


class EdgeBinding(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, qg_id: str=None, kg_id: OneOfEdgeBindingKgId=None):  # noqa: E501
        """EdgeBinding - a model defined in Swagger

        :param qg_id: The qg_id of this EdgeBinding.  # noqa: E501
        :type qg_id: str
        :param kg_id: The kg_id of this EdgeBinding.  # noqa: E501
        :type kg_id: OneOfEdgeBindingKgId
        """
        self.swagger_types = {
            'qg_id': str,
            'kg_id': OneOfEdgeBindingKgId
        }

        self.attribute_map = {
            'qg_id': 'qg_id',
            'kg_id': 'kg_id'
        }
        self._qg_id = qg_id
        self._kg_id = kg_id

    @classmethod
    def from_dict(cls, dikt) -> 'EdgeBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EdgeBinding of this EdgeBinding.  # noqa: E501
        :rtype: EdgeBinding
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qg_id(self) -> str:
        """Gets the qg_id of this EdgeBinding.

        Query-graph edge id, i.e. the `edge_id` of a QEdge  # noqa: E501

        :return: The qg_id of this EdgeBinding.
        :rtype: str
        """
        return self._qg_id

    @qg_id.setter
    def qg_id(self, qg_id: str):
        """Sets the qg_id of this EdgeBinding.

        Query-graph edge id, i.e. the `edge_id` of a QEdge  # noqa: E501

        :param qg_id: The qg_id of this EdgeBinding.
        :type qg_id: str
        """
        if qg_id is None:
            raise ValueError("Invalid value for `qg_id`, must not be `None`")  # noqa: E501

        self._qg_id = qg_id

    @property
    def kg_id(self) -> OneOfEdgeBindingKgId:
        """Gets the kg_id of this EdgeBinding.

        One or more knowledge-graph edge ids, i.e. the `id` of a KEdge  # noqa: E501

        :return: The kg_id of this EdgeBinding.
        :rtype: OneOfEdgeBindingKgId
        """
        return self._kg_id

    @kg_id.setter
    def kg_id(self, kg_id: OneOfEdgeBindingKgId):
        """Sets the kg_id of this EdgeBinding.

        One or more knowledge-graph edge ids, i.e. the `id` of a KEdge  # noqa: E501

        :param kg_id: The kg_id of this EdgeBinding.
        :type kg_id: OneOfEdgeBindingKgId
        """
        if kg_id is None:
            raise ValueError("Invalid value for `kg_id`, must not be `None`")  # noqa: E501

        self._kg_id = kg_id
